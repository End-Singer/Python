# 字符串的定义方式
# 单引号定义法
name = '博丽灵梦'
print(type(name))
# 双引号定义法
name = "博丽灵梦"
print(type(name))
# 三引号定义法，写法和多行注释一样
name = """爱丽丝·玛格特洛伊德"""
print(type(name))
# 在字符串内包含双引号
name = '博丽灵梦"巫女"'
print(name)
# 在字符串内包含单引号
name = "爱丽丝'人偶师'"
print(name)
# 转义字符\解除右侧引号的效用
name_9 = "\"琪露诺\""
print(name_9)

# 字符串的拼接
print("日照香炉生紫烟，" + "遥看瀑布挂前川。")
# 不支持不同数据类型的拼接，需要转换成字符串
year = "2022"
month = "10"
print("今天是" + year + "年" + month + "月")

# 字符串的格式化
# 通过占位的形式，完成拼接，%表示占位，s表示数据类型
"""
其他数据类型的占位：
    %s 将内容变成字符串，放入占位
    %d 将内容变成整数，放入占位
    %f 将内容变成浮点型，放入占位
"""
year = 2022
month = 10
day = 6
place = "宁波"
humidity = 0.85
date = "今天是%d年%d月%d日，%s的湿度是%f" % (year, month, day, place, humidity)
print(date)

# 字符串格式化的数字精度控制
# %m.nf m,
# m 控制宽度，m小于数字自身宽度不生效
# .n 控制小数点精度，会进行四舍五入
num = 10.05
print("宽度6精度3，结果是: %5.2f" % num)
print("宽度6精度1，结果是: %5.1f" % num)

# 字符串快速格式化
# 语法 f"内容{变量}内容"
"""
1.不会理会类型
2.不会控制精度
"""
print(f"今天是{year}年{month}月{day}日")

# 表达式的格式化
# 表达式：一条具有明确执行结果的代码语句
print(f"明年是{year + 1}年")
print("琪露诺的数据类型是%s" % type(name_9))
